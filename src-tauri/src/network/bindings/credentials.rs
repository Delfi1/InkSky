// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use super::session::Session;
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct Credentials {
    pub primary_id: u64,
    pub email: String,
    pub password: String,
    pub sessions: Vec<Session>,
}

impl TableType for Credentials {
    const TABLE_NAME: &'static str = "Credentials";
    type ReducerEvent = super::ReducerEvent;
}

impl Credentials {
    #[allow(unused)]
    pub fn filter_by_primary_id(primary_id: u64) -> TableIter<Self> {
        Self::filter(|row| row.primary_id == primary_id)
    }
    #[allow(unused)]
    pub fn find_by_primary_id(primary_id: u64) -> Option<Self> {
        Self::find(|row| row.primary_id == primary_id)
    }
    #[allow(unused)]
    pub fn filter_by_email(email: String) -> TableIter<Self> {
        Self::filter(|row| row.email == email)
    }
    #[allow(unused)]
    pub fn find_by_email(email: String) -> Option<Self> {
        Self::find(|row| row.email == email)
    }
    #[allow(unused)]
    pub fn filter_by_password(password: String) -> TableIter<Self> {
        Self::filter(|row| row.password == password)
    }
}
